[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sliplib"
dynamic = ["version"]
description = "Slip package"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Ruud de Jong", email = "ruud.de.jong@xs4all.nl" },
]
keywords = [
    "RFC1055",
    "framing",
    "message",
    "protocol",
    "slip",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = []

[project.urls]
"Source code" = "https://github.com/rhjdjong/SlipLib"

[tool.hatch.version]
path = "VERSION"

[tool.hatch.build.targets]
packages = ["src/sliplib"]

[tool.hatch.envs.default]
python = "3.12"
dependencies = [
    "pytest",
    "pytest-mock",
    "semantic-version-check",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.test]
extra-dependencies = [
    "coverage[toml]>=6.5",
    "pytest-asyncio",
]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
    "coverage json",
]
cov = [
    "test-cov",
    "cov-report",
]
cov-xml = [
    "test-cov",
    "coverage combine",
    "coverage xml",
]

[[tool.hatch.envs.types.matrix]]
python_version = ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.types]
python = "3.13"
extra-dependencies = [
    "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --strict --install-types --non-interactive {args:src tests examples}"

[tool.hatch.envs.style]
dependencies = [
    "isort",
    "black",
]

[tool.hatch.envs.style.scripts]
isort-check = "isort --check-only {args:src tests examples docs}"
black-check = "black --check {args:src tests examples docs}"
isort-fix = "isort {args:src tests examples docs}"
black-fix = "black {args:src tests examples docs}"
check = [
    "- isort-check",
    "black-check",
]
fix = [
    "isort-fix",
    "black-fix",
]

[tool.coverage.run]
source_pkgs = ["sliplib", "tests"]
branch = true
parallel = true
concurrency = [
    "multiprocessing",
    "thread",
]

[tool.coverage.paths]
sliplib = ["src/sliplib"]
tests = ["tests"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
fail_under = 100

[tool.hatch.build.targets.sdist]
include = [
    "src",
]

[tool.hatch.envs.doc]
python = "3.12"
dependencies = [
    "myst-parser",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-toolbox",
]

[tool.hatch.envs.doc.scripts]
build = "cd {root}/docs && make {args:html}"
clean = "cd {root}/docs && make clean"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
asyncio_mode = "auto"
